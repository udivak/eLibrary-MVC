@model eLibrary.Models.WaitListViewModel

@{
    ViewData["Title"] = "Waiting List for " + Model.Book.Title;
}

<div class="container mx-auto px-4 py-8">
    <div class="max-w-4xl mx-auto">
        <div class="bg-white rounded-lg shadow-md overflow-hidden border border-gray-200">
            <div class="overflow-x-auto">
                <table class="min-w-full">
                    <thead class="bg-blue-600">
                    <tr>
                        <th scope="col" class="px-6 py-4 text-left text-sm font-semibold text-white uppercase tracking-wider">User Email</th>
                        <th scope="col" class="px-6 py-4 text-left text-sm font-semibold text-white uppercase tracking-wider">Added Date</th>
                        <th scope="col" class="px-6 py-4 text-left text-sm font-semibold text-white uppercase tracking-wider">Actions</th>
                    </tr>
                    </thead>
                    <tbody id="waitlist-tbody" class="divide-y divide-gray-200">
                    @foreach (var entry in Model.WaitingList)
                    {
                        <tr class="hover:bg-blue-50 cursor-move transition-colors bg-blue-100 mb-2" data-user-email="@entry.UserEmail" data-position="@entry.Position">
                            <td class="px-6 py-6 whitespace-nowrap">
                                <div class="text-base font-medium text-gray-900">@entry.UserEmail</div>
                            </td>
                            <td class="px-6 py-6 whitespace-nowrap">
                                <div class="text-base text-gray-700">@entry.AddedDate.ToString("MMM dd, yyyy HH:mm")</div>
                            </td>
                            <td class="px-6 py-6 whitespace-nowrap text-right">
                                <form method="post" class="inline-block"
                                      action="@Url.Action("DeleteUserFromWaitlist", "Waitlist", new { bookISBN = Model.Book.ISBN, userEmail = entry.UserEmail })">
                                    <button type="submit"
                                            class="text-red-600 hover:text-red-900 transition-colors font-medium text-base">
                                        Delete
                                    </button>
                                </form>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>

        <!-- "Back to all books" button after the list -->
        <div class="mt-6 text-left">
            <a href="@Url.Action("Index", "Waitlist")"
               class="inline-flex items-center px-3 py-2 text-sm bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition-colors">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" viewBox="0 0 20 20" fill="currentColor" style="width: 50px">
                    <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
                </svg>
                Back to all books
            </a>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sortablejs@latest/Sortable.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const tbody = document.getElementById('waitlist-tbody');

        new Sortable(tbody, {
            animation: 150,
            onEnd: function(evt) {
                const userEmail = evt.item.getAttribute('data-user-email');
                const bookISBN = '@Model.Book.ISBN';
                const newPosition = evt.newIndex + 1; // Convert to 1-based index for position
                const oldPosition = evt.oldIndex + 1; // Convert to 1-based index for position

                if (newPosition !== oldPosition) {
                    // Send the updated position to the backend to update the database
                    fetch(`/Waitlist/UpdateUserPosition?bookISBN=${bookISBN}&userEmail=${userEmail}&newPosition=${newPosition}&oldPosition=${oldPosition}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        }
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                console.log('Position updated successfully');
                            } else {
                                console.error('Failed to update position');
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                        });
                }
            }
        });
    });
</script>

<style>
    #waitlist-tbody tr {
        border-bottom: 4px solid white;
        background-color: #EBF5FF;  /* Light blue background */
        transition: all 0.3s ease;
    }

    #waitlist-tbody tr:hover {
        background-color: #DBEAFE;  /* Slightly darker blue on hover */
        transform: translateX(4px);  /* Slight movement on hover */
    }

    #waitlist-tbody tr td {
        padding: 1.5rem 1rem;  /* Increased padding */
    }

    .bg-blue-600 {
        background-color: #2563EB;  /* Rich blue for header */
    }

    #waitlist-tbody tr td:first-child {
        border-left: 4px solid #2563EB;  /* Blue accent on the left */
    }

    /* Smooth transitions */
    #waitlist-tbody tr {
        transition: all 0.2s ease-in-out;
    }

    /* Better text contrast */
    #waitlist-tbody tr td div {
        color: #1E293B;  /* Darker text for better readability */
    }

    /* Delete button styling */
    button[type="submit"] {
        padding: 0.5rem 1rem;
        border-radius: 0.375rem;
        background-color: #FEE2E2;
        transition: all 0.2s ease;
    }

    button[type="submit"]:hover {
        background-color: #FEE2E2;
        transform: scale(1.05);
    }
</style>