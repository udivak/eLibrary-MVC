@using Microsoft.AspNetCore.Mvc.TagHelpers
@using System.Text.Json
@model eLibrary.Models.IndexViewModel;
@inject IHttpContextAccessor _context;
@{
    ViewData["Title"] = "iReadit";
    Layout = "_Layout";
    var userName = _context.HttpContext.Session.GetString("userName");
    string msg = "";
    if (TempData["AddToCartMessage"] != null)
    {
        if (TempData["AddToCartMessage"].ToString().Equals("SUCCESS"))
        {
            msg = "'" + TempData["BookTitle"] + "' has been added to cart successfully.";
        }
        if (TempData["AddToCartMessage"].ToString().Equals("FAIL"))
        {
            msg = "Sorry, we don't have enough copies of '" + TempData["BookTitle"] + "' at the moment." +
                  "Your request has been added to our Waiting List.";
        }
        TempData["AddToCartMessage"] = null;
    }
    if (TempData["eLibraryFeedbackMSG"] != null)
    {
        if (TempData["eLibraryFeedbackMSG"].ToString().Equals("SUCCESS"))
        {
            msg = "Thank you! Your feedback has been submitted.";
        }
        else
        {
            msg = "You have already submitted review today.";
        }
        TempData["eLibraryFeedbackMSG"] = null;
    }
    if (TempData["BookReviewMSG"] != null)
    {
        if (TempData["BookReviewMSG"].ToString().Equals("SUCCESS"))
        {
            msg = "Thank you! Your review has been submitted.";
        }
        else
        {
            if (!string.IsNullOrEmpty(TempData["CurrentBookTitle"].ToString()))
                msg = $"You already posted a review for '{TempData["CurrentBookTitle"]}'.";
            else
                msg = "You already posted a review for this book.";
        }
        TempData["BookRatingMSG"] = null;
    }

    if (TempData["DeleteBookMessage"] != null)
    {
        if (TempData["DeleteBookMessage"].ToString().Equals("SUCCESS"))
        {
        }
        
        if (TempData["DeleteBookMessage"].ToString().Equals("FAIL"))
        {
            msg = "An error occured while deleting the book.";
        }
    }
    
    if (!string.IsNullOrEmpty(msg))
    {
        var jsonMsg = JsonSerializer.Serialize(msg);
        <script>
        alert('@Html.Raw(jsonMsg)');
        </script>
    }
}

<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css"/>
<link rel="stylesheet" href="~/css/Layout.css" asp-append-version="true"/>
<link rel="stylesheet" href="~/css/Index.css" asp-append-version="true"/>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"/>


<div class="container">
    <!-- Main Content Section -->
    <div class="text-center main-content">
        <h1 class="page-title" style="font-size: 60px;">Welcome to iReadit</h1>
        <p class="lead">
            Borrow and read eBooks easily, anywhere and anytime.
        </p>
        <br />
    </div>
</div>

@if (!string.IsNullOrEmpty(userName))
{
    <div class="text-center">
        <a href="@Url.Action("Profile", "User")" class="btn btn-primary">Go to Profile</a>
    </div>
}

<!-- Featured Books Section -->
<div class="featured-books">
    <h2 class="featured_books_title">Featured Books</h2>
    <br />
    <div id="featuredBooksCarousel" class="carousel slide" data-bs-ride="carousel" data-bs-interval="5000">
        <!-- Indicators/Dots -->
        <div class="carousel-indicators">
            @for (int i = 0; i < (Model.FeaturedBooks.Count() + 4) / 5; i++)
            {
                <button type="button" data-bs-target="#featuredBooksCarousel" data-bs-slide-to="@i" class="@(i == 0 ? "active" : "")" aria-current="true" aria-label="Slide @(i + 1)"></button>
            }
        </div>

        <!-- Carousel Items -->
        <div class="carousel-inner">
            @for (int i = 0; i < Model.FeaturedBooks.Count(); i += 5)
            {
                <div class="carousel-item @(i == 0 ? "active" : "")">
                    <div class="row justify-content-center">
                        @foreach (var book in Model.FeaturedBooks.Skip(i).Take(5))
                        {
                            <div class="col-md-2 col-sm-4 mb-4">
                                <a href="@Url.Action("BookDetails", "Book", new { isbn = book.ISBN })" class="card book-card">
                                    <img src="@Url.Content("~/images/"+book.Title+".jpg")" class="card-img-top book-img" alt="@book.Title">
                                    <div class="card-body">
                                        <h5 class="card-title">@book.Title</h5>
                                        <p class="card-text">
                                            <span class="underline">Format:</span> @book.Format
                                        </p>
                                        @if (book.isOnSale == 1)
                                        {
                                            <p class="card-text">
                                                <span class="underline">Buy Price:</span> <s>@book.BuyPrice</s>$
                                            </p>
                                            <p class="card-text">
                                                <span class="sale-price">Sale Buy Price:</span> @(Math.Round(book.BuyPrice * ((100 - book.SalePercentage) / 100.0), 2))$
                                            </p>
                                        }
                                        else
                                        {
                                            <p class="card-text">
                                                <span class="underline">Buy Price:</span> @book.BuyPrice$
                                            </p>
                                        }
                                        @if (book.isPopular == 0 && book.isOnSale == 1)   // Not Popular and in sale
                                        {
                                            <p class="card-text">
                                                <span class="underline">Borrow Price:</span> <s>@book.BorrowPrice$</s>
                                            </p>
                                            <p class="card-text">
                                                <span class="sale-price">Sale Borrow Price:</span> @(Math.Round(book.BorrowPrice * ((100 - book.SalePercentage) / 100.0), 2))$
                                            </p>
                                        }
                                        @if (book.isPopular == 0 && book.isOnSale == 0)   // not popular and not in sale
                                        {
                                            <p class="card-text">
                                                <span class="underline">Borrow Price:</span> @book.BorrowPrice$
                                            </p>
                                        }
                                    </div>
                                </a>
                                <button type="button" class="btn btn-success buy-now-btn text-white" data-isbn="@book.ISBN">Buy Now</button>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>

        <!-- Carousel Controls -->
        <button class="carousel-control-prev" type="button" data-bs-target="#featuredBooksCarousel" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#featuredBooksCarousel" data-bs-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Next</span>
        </button>
    </div>
</div>

<br />
<br />
<br />
<br />

<!-- eLibraryFeedbacks Section -->
<div class="feedback-section">
    <h2 class="feedback-title">iReadit Feedback</h2>
    <br>
    <div class="row">
        @foreach (var feedback in Model.Feedbacks.Take(4)) // First row of 4 feedbacks
        {
            <div class="col-md-3">
                <div class="card feedback-card mb-4">
                    <div class="card-body">
                        <h5 class="card-title">@feedback.UserName</h5>
                        <div class="stars">
                            @for (int i = 0; i < 5; i++)
                            {
                                <i class="fa @(i < feedback.Stars ? "fa-star" : "fa-star-o")" style="color: @(i < feedback.Stars ? "gold" : "gray");"></i>
                            }
                        </div>
                        <p class="card-text">
                            <strong class="text-muted"><u>Feedback:</u> @feedback.Content</strong>
                        </p>
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="row">
        @foreach (var feedback in Model.Feedbacks.Skip(4).Take(4)) // Second row of 4 feedbacks
        {
            <div class="col-md-3">
                <div class="card feedback-card mb-4">
                    <div class="card-body">
                        <h5 class="card-title">@feedback.UserName</h5>
                        <div class="stars">
                            @for (int i = 0; i < 5; i++)
                            {
                                <i class="fa @(i < feedback.Stars ? "fa-star" : "fa-star-o")" style="color: @(i < feedback.Stars ? "gold" : "gray");"></i>
                            }
                        </div>
                        <p class="card-text">
                            <strong class="text-muted"><u>Feedback:</u> @feedback.Content</strong>
                        </p>
                    </div>
                </div>
            </div>
        }
    </div>
</div>


<!-- The Overlay -->
<div class="modal-overlay"></div>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        var carousel = document.querySelector('#featuredBooksCarousel');
        var carouselInstance = new bootstrap.Carousel(carousel, {
            interval: 5000,
            wrap: true
        });
    
        var totalSlides = carousel.querySelectorAll('.carousel-item').length;
        var currentSlide = 0;
    
        carousel.addEventListener('slide.bs.carousel', function (event) {
            if (event.direction === 'right') {
                currentSlide = (currentSlide + 1) % totalSlides;
            } else {
                currentSlide = (currentSlide - 1 + totalSlides) % totalSlides;
            }
    
            var items = carousel.querySelectorAll('.carousel-item');
            
            // Remove any existing transform styles
            items.forEach(item => {
                item.style.transform = '';
            });
    
            // Ensure proper positioning for infinite loop
            if (currentSlide === 0 && event.direction === 'right') {
                items[totalSlides - 1].style.transform = 'translateX(-100%)';
                items[0].style.transform = 'translateX(0)';
            } else if (currentSlide === totalSlides - 1 && event.direction === 'right') {
                items[0].style.transform = 'translateX(100%)';
                items[totalSlides - 1].style.transform = 'translateX(0)';
            }
        });
        
        carousel.addEventListener('slid.bs.carousel', function () {
            var items = carousel.querySelectorAll('.carousel-item');
            items.forEach(item => {
                item.style.transform = '';
            });
        });
    });
    $(document).ready(function () {
        $(document).on('click', '.buy-now-btn', function () {
            const isLoggedIn = @Json.Serialize(!string.IsNullOrEmpty(_context.HttpContext.Session.GetString("userName")));
            const isbn = $(this).data('isbn'); // Get the ISBN from the button's data attribute
            console.log("Button clicked with ISBN:", isbn);

            if (isLoggedIn) {
                $.ajax({
                    url: '@Url.Action("BuyNow", "Book")',
                    data: { isbn: isbn },
                    method: 'POST',
                    success: function (response) {
                        if (response.success) {
                            window.location.href = response.redirectUrl;
                        } else {
                            alert(response.message || "An error occurred while processing your request.");
                        }
                    },
                    error: function () {
                        alert("Failed to process your request. Please try again.");
                    }
                });
            } else {
                alert('Please log in before proceeding.');
            }
        });
    });
</script>