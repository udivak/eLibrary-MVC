@using Microsoft.AspNetCore.Mvc.TagHelpers
@model IEnumerable<eLibrary.Models.Book>
@inject IHttpContextAccessor _context;

@{
    ViewData["Title"] = "iReadIt";
    Layout = "_Layout";
    var userName = _context.HttpContext.Session.GetString("userName");

}

<style>
    body {
        background-color: #2d2b2b;
        color: #fff;
    }
    .welcome-message {
        font-size: 1.2rem;
        font-weight: bold;
        color: #007bff;
        margin-top: 8px;
    }


    .main-content h1 {
        text-transform: none;
        font-weight: bold;
        color: #007bff;
    }

    /* The Card Styles */
    .card {
        height: 350px; /* Fixed height for all cards */
        background-color: #4cb1ae; /* Dark gray background */
        color: #000000; /* White text color */
        border: 1px solid #444444; /* Subtle border for design */
    }
    .book-img {
        height: 200px; /* Fixed height */
        width: 100%; /* Optional: Make the image span the card's width */
        object-fit: cover; /* Ensure the entire image is visible */
        background-color: #f0f0f0; /* Optional: Add a background color to handle empty spaces */
    }

    .card-title {
        font-size: 1rem; /* Ensure title font is uniform */
        font-weight: bold;
        white-space: wrap; /* Prevent text wrapping */
        overflow: hidden; /* Hide overflowing text */
        text-overflow: ellipsis; /* Add ellipsis (...) for long titles */
    }

    .card-body {
        display: flex;
        flex-direction: column;
        justify-content: space-between; /* Spread content evenly */
        height: 100%;
    }

    .card-text {
        font-size: 0.9rem;
    }

    /*Authentications buttons styling*/
    /* Ensure the container is positioned in the top-right corner */
    .auth-section {
        position: absolute;
        top: 10px; /* Adjust the distance from the top */
        right: 10px; /* Adjust the distance from the right */
        display: flex;
        flex-direction: column;
        align-items: center;
    }


    /* Optional: Close button styling */
    #closeModal {
        display: block;
        margin-top: 15px;
        color: #007bff;
        text-decoration: none;
        cursor: pointer;
    }

    /* New style for the top links */
    .top-links {
        display: flex;
        justify-content: space-between;
        margin: 20px 0;
    }

    .top-links a {
        color: #007bff;
        font-weight: bold;
        font-size: 1.1rem;
        text-decoration: none;
    }

    .top-links a:hover {
        text-decoration: underline;
        color: #0056b3;
    }

    /* Styling for Register and Login Links */
    .register-btn {
        margin-bottom: 8px;
        font-size: 20px;
    }

    .login-link {
        font-size: 18px;
        text-align: center;
    }

    .login-link a {
        text-decoration: none;
        color: #007bff;
        transition: color 0.3s ease, background-color 0.3s ease;
        padding: 5px 10px;
        border-radius: 5px;
    }

    .login-link a:hover {
        text-decoration: underline;
        color: #0056b3;
        background-color: #e0f7fa;
    }
</style>


<div class="container">
    <!-- Top Links Section -->
    <div class="top-links">
        <a href="@Url.Action("AddBook", "Book")">Add New Book</a>
        <a href="@Url.Action("SearchBooks", "Book")">Search for a Book</a>
    </div>

    <!-- Main Content Section -->
    <div class="text-center main-content">
        <h1 class="display-4">Welcome to iReadIt</h1>
        <p class="lead">
            Borrow and read eBooks easily, anywhere and anytime.
        </p>
    </div>
</div>
@if (!string.IsNullOrEmpty(userName))
{
    <div class="text-center">
        <a href="@Url.Action("Profile", "User")" class="btn btn-primary">Go to Profile</a>
    </div>
}


<!-- Featured Books Section -->
<div class="featured-books">
    <h2>Featured Books</h2>
    <br>
    <div class="row">
        @foreach (var book in Model.Take(4)) // First row of 4 books
        {
            <div class="col-md-3">
                <a href="@Url.Action("BookDetails", "Book", new { id = book.isbnNumber })" class="card book-card mb-4">
                    <img src="~/images/Harry Potter 1.jpg" class="card-img-top book-img" alt="@book.Title">
                    <div class="card-body">
                        <h5 class="card-title">@book.Title</h5>
                        <p class="card-text"><strong class="text-muted"><u>Format:</u> @book.Format</strong></p>
                        <p class="card-text"><strong class="text-muted"><u>Buy Price:</u> @book.BuyPrice$</strong></p>
                    </div>
                </a>
            </div>
        }
    </div>
    <div class="row">
        @foreach (var book in Model.Skip(4).Take(4)) // Second row of 4 books
        {
            <div class="col-md-3">
                <a href="@Url.Action("BookDetails", "Book",new {isbn =  book.isbnNumber})" class="card book-card mb-4">
                    <img src="~/images/Harry Potter 1.jpg" class="card-img-top book-img" alt="@book.Title">
                    <div class="card-body">
                        <h5 class="card-title">@book.Title</h5>
                        <p class="card-text"><strong class="text-muted"><u>Format:</u> @book.Format</strong></p>
                        <p class="card-text"><strong class="text-muted"><u>Buy Price:</u> @book.BuyPrice$</strong></p>
                    </div>
                </a>
            </div>
        }
    </div>
</div>


<!-- The Overlay (always visible) -->
<div class="modal-overlay"></div>

