@model eLibrary.Models.eLibraryFeedback
@using Microsoft.AspNetCore.Mvc.TagHelpers
@inject IHttpContextAccessor _context;
@{
    ViewBag.Title = "Give us Feedback";
    Layout = "_Layout";
    var userEmail = _context.HttpContext.Session.GetString("userEmail");
}

<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css"/>
<link rel="stylesheet" href="~/css/_layout.css" asp-append-version="true"/>
<link rel="stylesheet" href="~/css/eLibraryFeedback.css" asp-append-version="true"/>

<div class="container mt-4">
    <h3 class="text-center">Submit Your Feedback</h3>
    @if (string.IsNullOrEmpty(userEmail))
    {
        <div class="alert alert-warning text-center" role="alert" style="font-size: 0.9rem;">
            Please <a href="@Url.Action("Login", "User")">log in</a> to submit feedback.
        </div>
    }
    else
    {
        <form action="@Url.Action("eLibraryFeedbackSubmit", "eLibraryFeedback")" method="post" style="font-size: 0.9rem;">
            <div class="form-group mt-2">
                <label for="email" class="form-label">Email</label>
                <input type="email" class="form-control form-control-sm" id="email" name="email" value="@userEmail" readonly required>
            </div>

            <div class="form-group mt-2">
                <label for="stars" class="form-label">Rating</label>
                <div class="stars-container d-flex" id="stars-container" style="gap: 5px;">
                    <!-- Stars will be dynamically created here -->
                </div>
                <input type="hidden" id="stars" name="stars" required>
            </div>

            <div class="form-group mt-2">
                <label for="content" class="form-label">Feedback</label>
                <textarea class="form-control form-control-sm" id="content" name="content" rows="3" required></textarea>
            </div>

            <div class="form-group mt-2 text-center">
                <button type="submit" class="btn btn-primary btn-sm" id="submit-feedback">Submit</button>
            </div>
        </form>
    }
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const starsContainer = document.getElementById('stars-container');
        const hiddenInput = document.getElementById('stars');
        const totalStars = 5;

        // Create stars dynamically
        for (let i = 1; i <= totalStars; i++) {
            const star = document.createElement('span');
            star.textContent = 'â˜…';
            star.classList.add('star');
            star.dataset.value = i;

            // Add hover effect
            star.addEventListener('mouseover', function () {
                highlightStars(i);
            });

            // Add click event
            star.addEventListener('click', function () {
                selectStars(i);
            });

            // Remove hover effect
            starsContainer.addEventListener('mouseleave', function () {
                highlightStars(hiddenInput.value);
            });

            starsContainer.appendChild(star);
        }

        // Highlight stars based on hover or selection
        function highlightStars(rating) {
            const stars = starsContainer.querySelectorAll('.star');
            stars.forEach(star => {
                star.style.color = star.dataset.value <= rating ? 'gold' : 'gray';
            });
        }

        // Select stars on click
        function selectStars(rating) {
            hiddenInput.value = rating;
            highlightStars(rating);
        }
    });
</script>
