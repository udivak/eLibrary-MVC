@model eLibrary.Models.Book
@inject IHttpContextAccessor _context;
@{
    Layout = "_Layout";
    ViewData["Title"] = $"{Model.Title} Details";
}

<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css"/>
<link rel="stylesheet" href="~/css/_layout.css" asp-append-version="true"/>
<link rel="stylesheet" href="~/css/BookDetails.css" asp-append-version="true"/>

<div class="container mt-5">
    <div class="card shadow">
        <div class="card-header bg-primary text-white">
            <h4>Book Details</h4>
        </div>
        <div class="card-body d-flex flex-wrap align-items-start">
            <div class="book-image-container">
                <img src="~/images/Harry Potter 1.jpg" class="card-img-top book-img" alt="@Model.Title">
            </div>
            <div class="book-details-text">
                <div class="row">
                    <div class="col-6">
                        <p class="data"><strong>Title: </strong> @Model.Title</p>
                        <p class="data"><strong>Author:</strong> @Model.Author</p>
                        <p class="data"><strong>ISBN:</strong> @Model.isbnNumber</p>
                        <p class="data"><strong>Publisher:</strong> @Model.Publisher</p>
                        <p class="data"><strong>Year:</strong> @Model.Year</p>
                        <p class="data"><strong>Age Limit:</strong> @Model.AgeLimit+</p>
                    </div>
                    <div class="col-6">
                        <p class="data"><strong>Buy Price:</strong> @Model.BuyPrice$</p>
                        <p class="data"><strong>Borrow Price:</strong> @Model.BorrowPrice$</p>
                        <p class="data"><strong>Age Limit:</strong> @Model.AgeLimit+</p>
                        <p class="data"><strong>Genre:</strong> @Model.Genre</p>
                        <p class="data" id="bookFormat"><strong>Format:</strong> @Model.Format</p>
                        @if (Model.Format == "Physical")
                        {
                            <!--<div class="form-group">-->
                                <p class="data"><strong>Quantity available in stock:</strong> @Model.Quantity</p>
                                <label for="quantity" class="qty_desired-label"><strong>Quantity desired:</strong></label>
                                <input type="number" id="quantity" name="quantity" class="form-control-sm" min="1" max="@Model.Quantity"/>
                            <!--</div>-->
                        }
                    </div>
                </div>
                <select class="form-control-sm mb-3" id="cartAction" name="Action" required>
                    <option value="" disabled selected>Select an Action</option>
                    <option value="Buy">Buy</option>
                    <option value="Borrow">Borrow</option>
                </select>
            </div>
        </div>
        <div class="card-footer text-end">
            <a href="@Url.Action("DownloadPdf", "Book", new { isbn = @Model.isbnNumber })" class="btn btn-warning">Download PDF</a>
            <div id="quantityContainer" style="display: none; margin-top: 10px;"></div>
            <button type="button" class="btn btn-secondary btn-back" onclick="window.history.back()">Back</button>
            <button type="button" class="btn btn-success" id="addToCartButton">Add to Cart</button>
        </div>
    </div>
</div>
<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


<script>
    $(document).ready(function() {
        $('#addToCartButton').on('click', function() {
            const cartAction = $('#cartAction').val();
            const qty = parseInt($('#quantity').val()) || 1;
            const isLoggedIn = @Json.Serialize(!string.IsNullOrEmpty(_context.HttpContext.Session.GetString("userName")));

            if (!cartAction) {
                alert("Please select an action (Buy or Borrow) before proceeding.");
                return;
            }
            if (!isLoggedIn) {
                alert("Please Log in before adding to cart.");
                return;
            }
            const url = '@Url.Action("AddToCart", "Book")' +
                '?isbn=@Model.isbnNumber' +
                '&cartAction=' + encodeURIComponent(cartAction) +
                '&qty=' + encodeURIComponent(qty);

            console.log("Redirecting to:", url); // Debug log
            window.location.href = url;
        });
    });
</script>
<!--
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const actionSelect = document.getElementById("cartAction");
        const quantityContainer = document.getElementById("quantityContainer");
        const bookFormat = '@Model.Format';
        
        actionSelect.addEventListener("change", function () {
            // Check the selected value
            if (actionSelect.value === "Buy" && bookFormat === "Physical") {
                // Show the quantity input field
                quantityContainer.style.display = "block";
            } else {
                // Hide the quantity input field
                quantityContainer.style.display = "none";
            }
        });
    });
</script> -->


