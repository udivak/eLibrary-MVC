@model IEnumerable<eLibrary.Models.Book>
@{
    ViewBag.Title = "Find and Search for a Book";
    Layout = "_Layout";
}

<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
<link rel="stylesheet" href="~/css/_layout.css" asp-append-version="true" />

<!-- Hero Section -->
<div class="hero-section mb-5">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-8 text-center">
                <h1 class="display-4">Find Your Next Great Read</h1>
                <p class="lead">Search through our extensive collection of books</p>
            </div>
        </div>
    </div>
</div>

<!-- Category Buttons Section -->
<div class="container mb-4">
    <div class="category-section">
        <h2 class="text-center mb-4">Browse by Genre</h2>
        <div class="row justify-content-center">
            @foreach (var genre in Enum.GetValues(typeof(Genre)))
            {
                <div class="col-md-auto">
                    <button class="btn btn-outline-primary category-button" data-category="@genre">
                        <i class="fas fa-book"></i> @genre
                    </button>
                </div>
            }
        </div>
    </div>
</div>

<!-- Advanced Search Section -->
<div class="container mb-4">
    <div class="search-section">
        <h2 class="text-center mb-4">Advanced Search</h2>
        <div class="row g-3">
            <div class="col-md-3">
                <label for="titleFilter" class="form-label">Title</label>
                <div class="form-floating input-small">
                    <input type="text" id="titleFilter" class="form-control" placeholder="Title" />
                </div>
            </div>
            <div class="col-md-6 col-lg-3">
                <label for="authorFilter" class="form-label">Author</label>
                <div class="form-floating input-small">
                    <input type="text" id="authorFilter" class="form-control" placeholder="Author" />
                </div>
            </div>
            <div class="col-md-6 col-lg-3">
                <label for="genreFilter" class="form-label">Genre</label>
                <div class="form-floating input-small">
                    <input type="text" id="genreFilter" class="form-control" placeholder="Genre" />
                </div>
            </div>
            <div class="col-md-6 col-lg-3">
                <label for="publisherFilter" class="form-label">Publisher</label>
                <div class="form-floating input-small">
                    <input type="text" id="publisherFilter" class="form-control" placeholder="Publisher" />
                </div>
            </div>
            <div class="col-md-6 col-lg-3">
                <label for="yearFilter" class="form-label">Year</label>
                <div class="form-floating input-small">
                    <input type="number" id="yearFilter" class="form-control" placeholder="Year" />
                </div>
            </div>
            <div class="col-md-6 col-lg-3">
                <button id="applyFilters" class="btn btn-primary">
                    <i class="fas fa-search"></i> Search
                </button>
            </div>
            <div class="col-md-6 col-lg-3">
                <label for="onSaleFilter" class="form-label">Filter</label>
                <button id="onSaleFilter" class="btn btn-secondary">
                    <i class="fas fa-tags"></i> On Sale / All
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Results Section -->
<div id="bookListContainer">
    @await Html.PartialAsync("_BookList", Model)
</div>

<script>
    // Handle filter button click
    document.getElementById("applyFilters").addEventListener("click", function () {
        const title = document.getElementById("titleFilter").value;
        const author = document.getElementById("authorFilter").value;
        const genre = document.getElementById("genreFilter").value;
        const publisher = document.getElementById("publisherFilter").value;
        const year = document.getElementById("yearFilter").value;

        const queryString = new URLSearchParams({
            title: title,
            author: author,
            genre: genre,
            publisher: publisher,
            year: year
        }).toString();

        window.location.href = `/Book/FilterBooks?${queryString}`;
    });

    // Handle category button clicks
    document.querySelectorAll('.category-button').forEach(button => {
        button.addEventListener('click', function() {
            const category = this.getAttribute('data-category');
            window.location.href = `/Book/FilterBooksByCategory?genre=${category}`;
        });
    });

    // Toggle "On Sale / All" button
    document.getElementById("onSaleFilter").addEventListener("click", function () {
        const isOnSale = this.classList.toggle("btn-success");
        this.classList.toggle("btn-secondary");
        const filterType = isOnSale ? "On Sale" : "All Books";
        this.innerHTML = `<i class="fas fa-tags"></i> ${filterType}`;
        const filterQuery = isOnSale ? "?onSale=true" : "?onSale=false";
        window.location.href = `/Book/FilterBooks${filterQuery}`;
    });

    // Handle form submission on Enter key
    document.querySelectorAll('.form-floating input').forEach(input => {
        input.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                document.getElementById('applyFilters').click();
            }
        });
    });
</script>
