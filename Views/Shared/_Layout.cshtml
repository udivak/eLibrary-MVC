@using Microsoft.AspNetCore.Mvc.TagHelpers
@inject IHttpContextAccessor _context;
<!DOCTYPE html>
<html lang="en">
<head>
    @{    
        var userName = _context.HttpContext.Session.GetString("userName");
    }
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="/css/_layout.css">
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css"/>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true"/>
    <link rel="stylesheet" href="~/eLibrary.styles.css" asp-append-version="true"/>
</head>
<body>
<header>
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm custom-navbar border-bottom box-shadow mb-3">
        <div class="container-fluid">
            <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">iReadIt</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                <ul class="navbar-nav flex-grow-1">
                    <li class="nav-item">
                        <a class="nav-link" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" asp-area="" asp-controller="Book" asp-action="AddBook">Add Book</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" asp-area="" asp-controller="Book" asp-action="SearchBooks">Search Book</a>
                    </li>
                </ul>

                
                <div class="auth-section">
                    @if (!string.IsNullOrEmpty(_context.HttpContext.Session.GetString("userName")))
                    {
                        <!-- Welcome message when user is logged in -->
                        <p class="welcome-message">Welcome, @_context.HttpContext.Session.GetString("userName")</p>
                    }
                    else
                    {
                        <!-- Login and Register buttons -->
                        <a href="javascript:void(0)" class="btn btn-lg btn-primary register-btn animate-btn" id="loginLink">Login</a>
                        <p class="login-link">Not a member? <a asp-controller="User" asp-action="Registration">Register</a></p>

                        <!-- Modal for Login -->
                        <div class="modal-overlay" style="display: none;"></div>
                        <div class="modal" id="loginModal">
                            <div class="modal-content">
                                <h2>Login</h2>
                                <form action="@Url.Action("Login", "User")" method="post">
                                    <div class="form-group">
                                        <label for="username">Username</label>
                                        <input type="text" id="email" name="email" required/>
                                    </div>
                                    <div class="form-group">
                                        <label for="password">Password</label>
                                        <input type="password" id="password" name="password" required/>
                                    </div>
                                    <button type="submit" class="btn btn-lg btn-primary">Submit</button>
                                </form>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </nav>

</header>

<div class="container-general">
    <main role="main" class="pb-3">
        @RenderBody()
    </main>
</div>

<footer id="main-footer" class="border-top footer">
    <div class="container">
        &copy; 2024 - eLibrary - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
    </div>
</footer>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const loginLink = document.getElementById('loginLink');
        const loginModal = document.getElementById('loginModal');
        const modalOverlay = document.querySelector('.modal-overlay');

        // Function to show the modal with a dropdown effect
        function showModal() {
            loginModal.style.display = 'block';  // Show modal
            modalOverlay.style.display = 'block';  // Show overlay

            // Ensure that the modal is not initially visible
            loginModal.style.visibility = 'visible';
            loginModal.style.opacity = '1';  // Make modal fully visible
            loginModal.style.transition = 'none';  // Temporarily remove the transition

            // Trigger a reflow to reset the layout and enable the transition
            loginModal.offsetHeight; // Accessing offsetHeight forces a reflow

            // Now apply the transition
            loginModal.style.transition = 'all 0.5s ease-in-out';  // Apply transition for animation
            loginModal.style.maxHeight = '350px';  // Adjust this value based on the content height
        }

        // Function to hide the modal
        function hideModal() {
            loginModal.style.maxHeight = '0';  // Collapse modal (sliding up effect)
            loginModal.style.opacity = '0';  // Make modal invisible
            loginModal.style.visibility = 'hidden';  // Ensure modal is hidden
            modalOverlay.style.display = 'none';  // Hide overlay
        }

        // Event listeners
        loginLink.addEventListener('click', showModal);
        modalOverlay.addEventListener('click', hideModal);

        // Close the modal when clicking outside of it
        window.addEventListener('click', function(event) {
            // Check if the modal is currently displayed
            if (loginModal.style.display === 'block') {
                // If the click is not inside the modal content, close the modal
                if (!loginModal.contains(event.target) && event.target !== loginLink) {
                    hideModal();
                }
            }
        });
        // Hover effect for animated buttons
        const animatedButtons = document.querySelectorAll(".animate-btn");

        animatedButtons.forEach(button => {
            button.addEventListener("mouseover", () => {
                button.style.transform = "scale(1.1)";
                button.style.transition = "transform 0.3s";
            });

            button.addEventListener("mouseout", () => {
                button.style.transform = "scale(1)";
            });
        });
    });

</script>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>
@await RenderSectionAsync("Scripts", required: false)
</body>
</html>
